/**
 * fis3-deploy-aliyunoss main file
 * @author mfylee@me.com
 */

var co = require('co');
var OSS = require('ali-oss');

var path = require('path');

function uploadOss(client, file, prefix, callback) {

    var objectName = file.getHashRelease().replace(/^\//, '');

    co(function* () {
        objectName = path.join(prefix, objectName);
        fis.log.info('[上传OSS]' + objectName);
        var result = yield client.put(objectName, new Buffer(file.getContent()));
        callback();
    }).catch(function (err) {
        fis.log.warn(err);
        callback(err);
    });
}

module.exports = function (options, modified, total, callback) {
    if (!options.ak && !options.sk) {
        throw new Error('options.accessKey and options.secretKey is required!');
    } else if (!options.bucket) {
        throw new Error('options.bucket is required!');
    }
    var client = new OSS({
        region: options.region,
        accessKeyId: options.ak,
        accessKeySecret: options.sk
    });

    client.useBucket(options.bucket);
    var steps = [];

    modified.forEach(function(file) {
        var reTryCount = options.retry;
        steps.push(function(next) {
            var _upload = arguments.callee;

            uploadOss(client, file, options.prefix, function(error){
                if (error) {
                    if (!--reTryCount) {
                        throw new Error(error);
                    } else {
                        _upload();
                    }
                } else {
                    next(); //由于是异步的如果后续还需要执行必须调用 next
                }
            });
        });
    });
    fis.util.reduceRight(steps, function(next, current) {
        return function() {
            current(next);
        };
    }, callback)();
};

module.exports.options = {
    retry: 2, // 允许重试两次。
    ak: '', // 在阿里云OSS申请的 accessKeyId
    sk: '', // 在阿里云OSS申请的 secretAccessKey
    bucket: '', // 你的存储空间名称
    prefix: '', // 目录前缀
    region: 'oss-cn-hangzhou-internal',
    ossServer: 'http://oss-cn-hangzhou.aliyuncs.com'
};